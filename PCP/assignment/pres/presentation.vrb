\begin{block}{Scheduler}
\begin{itemize}
\item The Cilk Plus runtime uses a work-stealing scheduler to dynamically load-balance the tasks that are created by a Cilk Plus program;
\item At a high level, the runtime scheduler executes a Cilk Plus program by using worker threads;
\item In runtime, each worker thread maintains its deque using the following simple algorithm:
\begin{itemize}
\item When a worker thread executes a cilk\_spawn or a cilk\_for statement, it may push new tasks onto the tail (bottom) of its deque.
\item When a worker thread reaches a cilk\_sync that needs to wait for a spawned function to complete, it tries to keep busy by popping a task from the tail of its deque.
\item If the worker thread discovers that its deque is empty, it tries to steal work from the head (top) of the deque of another worker, where the worker is chosen at random.
\end{itemize}
\end{itemize}
\end{block}
